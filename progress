Mar 4.
  The cappuccino part: can display graphics
  Next: complete create, translation, resize part

Mar 4. 10:08
  The cappuccino part: can create and resize graphics
  Next: finish other parts and try to add xml file generating function!!!

Mar 4. 21:46

  The creation, resizing, selection/deselection and translation of text frames are done.
  Next: Hard code the fields and generate xml files, try to combine the two components using nitrogen.

        Goal: 1. Try to run the GUI from nitrogen;                                    Done
              2. Hard code the fields and generate xml files;                         Done
              3. Try to insert erlguten component into a nitrogen project;            Done
              4. Try to combine the whole system.                                     Done

Mar 21. 18:15

  mailmergingproject is everything we need, including erlguten, cappuccino and rubyonrails codes

Mar 26. 12:20

  mailmergingproject is everything we need, including erlguten which is in public/erlguten, the data files which are in public/data, and the cappuccino and rubyonrails codes. Now the hierachy is tidy, and some temporary files and the final ouput are generated to the root path.
 
  Next: Implement the requirement Erik prompted.
 
        Goal: 1. Hard code the template and userdata files;                                                  Done
              2. Modify erlguten so that it can process the dynamic texts fiels in the static ones.          Done

Mar 27. 19:57
  
  Dynamic text fields part finished. However the table and list are still left to be discussed with Erik. And I haven't dealed with the # mark problem, I think I may put that part away for a while, and deal with the xml file generation with new format issue and the GUI part.

  Next: Combine with GUI
     
        Goal: 1. Hard code from GUI to make the whole process go on well;
              2. Try to add dynamic fields from GUI;
              3. Add more properties' typing from GUI;
              4. Do research on editing view;
              5. (optional) Deal with the # mark problem.                           Done

 
